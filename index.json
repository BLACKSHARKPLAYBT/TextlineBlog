
[{"content":"","date":"2025-00-00","externalUrl":null,"permalink":"/tags/ai/","section":"Tags","summary":"","title":"AI","type":"tags"},{"content":"","date":"2025-00-00","externalUrl":null,"permalink":"/blogs/","section":"Blogs","summary":"","title":"Blogs","type":"blogs"},{"content":"","date":"2025-00-00","externalUrl":null,"permalink":"/tags/gpt-sovits/","section":"Tags","summary":"","title":"GPT-SoVITS","type":"tags"},{"content":" GPT-SoVITS如何使用别人的模型 # 准备 # 我们假设得到了别人的训练好的模型，那么我们应该拥有以下文件结构。\n我们有ckpt文件，pth文件,和参考音频。\n前往软件根目录放置文件，其中SoVITS_weights文件夹防止pth文件，GPT_weights放置ckpt文件。\n这里，v2的区别是你训练模型的版本，放置对应版本就好了。\n使用 # 开启TTS推理\n切换模型\n选择参考音频(记得填写参考音频文本)\n合成就好\n这是结果 # 音频下载\n","date":"2025-00-00","externalUrl":null,"permalink":"/blogs/gpt-sovits%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%88%AB%E4%BA%BA%E7%9A%84%E6%A8%A1%E5%9E%8B/","section":"Blogs","summary":"\u003ch1 class=\"relative group\"\u003eGPT-SoVITS如何使用别人的模型 \n    \u003cdiv id=\"gpt-sovits%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%88%AB%E4%BA%BA%E7%9A%84%E6%A8%A1%E5%9E%8B\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#gpt-sovits%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%88%AB%E4%BA%BA%E7%9A%84%E6%A8%A1%E5%9E%8B\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e准备 \n    \u003cdiv id=\"%E5%87%86%E5%A4%87\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%87%86%E5%A4%87\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e我们假设得到了别人的\u003cstrong\u003e训练好的模型\u003c/strong\u003e，那么我们应该拥有以下文件结构。\u003c/p\u003e","title":"GPT-SoVITS如何使用别人的模型","type":"blogs"},{"content":"","date":"2025-00-00","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"2025-00-00","externalUrl":null,"permalink":"/","section":"Textline博客","summary":"","title":"Textline博客","type":"page"},{"content":"","date":"2025-00-00","externalUrl":null,"permalink":"/tags/waline/","section":"Tags","summary":"","title":"Waline","type":"tags"},{"content":" Waline表情包制作 # 准备 # 根据官方文档创建表情包预设\n创建自己的表情预设 | Waline\n仓库/网站/本地目录\r├─ my_laugh.png\r├─ my_cute.png\r├─ my_rage.png\r├─ my_sob.png\r└─ ... 其中my_是可自定义的前缀，\u0026ldquo;laugh\u0026rdquo;,\u0026ldquo;cute\u0026rdquo;,\u0026ldquo;rage\u0026rdquo;,\u0026ldquo;sob\u0026rdquo;都是表情的名称，而png为表情包的后缀名\n在表情包目录下创建 info.json文件\n在里面填写表情包信息\n{\r\u0026#34;name\u0026#34;: \u0026#34;表情包\u0026#34;,\r\u0026#34;prefix\u0026#34;: \u0026#34;my_\u0026#34;,\r\u0026#34;type\u0026#34;: \u0026#34;png\u0026#34;,\r\u0026#34;items\u0026#34;: [\u0026#34;laugh\u0026#34;, \u0026#34;cute\u0026#34;, \u0026#34;rage\u0026#34;, \u0026#34;sob\u0026#34;]\r} name 对应你的表情包名称\nprefix 对应你的前缀名\ntype 对应你的后缀名\nitems 对应你的表情名称\n上传仓库 # 由于官方的文档没给详细过程在这里我详细讲一下，使用Github仓库的方法\n我们将本地的表情包上传到Github，我们的仓库结构应该是这样的：\nemojj(文件夹)\r├─ my_laugh.png\r├─ my_cute.png\r├─ my_rage.png\r├─ my_sob.png\r└─ info.json 其中emoji是我们的表情包文件夹。下面是我的例子。\n此时我们还不能访问我们的表情包，我们需要添加一个tag，使用Github的releases功能。\n发布版本，tag填写官方推荐格式v1.0.0这种，下次提交增大即可，例如v1.0.2，记住我们需要回车才可以创建新的标签。\n我们可以使用jsdelivr来为我们加速表情包链接的访问。\n填写格式\nhttps://cdn.jsdelivr.net/gh/Github用户名/仓库名 + @ + 标签名/文件目录\n例子： https://cdn.jsdelivr.net/gh/BLACKSHARKPLAYBT/Waline-Emoji@v1.0.3/xiaoheihe\n这样我们就可以访问我们的表情包了。\n","date":"2025-00-00","externalUrl":null,"permalink":"/blogs/waline%E8%A1%A8%E6%83%85%E5%8C%85%E5%88%B6%E4%BD%9C/","section":"Blogs","summary":"\u003ch1 class=\"relative group\"\u003eWaline表情包制作 \n    \u003cdiv id=\"waline%E8%A1%A8%E6%83%85%E5%8C%85%E5%88%B6%E4%BD%9C\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#waline%E8%A1%A8%E6%83%85%E5%8C%85%E5%88%B6%E4%BD%9C\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e准备 \n    \u003cdiv id=\"%E5%87%86%E5%A4%87\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%87%86%E5%A4%87\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e根据官方文档创建表情包预设\u003c/p\u003e","title":"Waline表情包制作","type":"blogs"},{"content":"","date":"2025-00-00","externalUrl":null,"permalink":"/tags/%E8%A1%A8%E6%83%85%E5%8C%85/","section":"Tags","summary":"","title":"表情包","type":"tags"},{"content":"","date":"2025-00-00","externalUrl":null,"permalink":"/tags/%E7%BD%91%E7%AB%99/","section":"Tags","summary":"","title":"网站","type":"tags"},{"content":"","date":"2025-00-00","externalUrl":null,"permalink":"/tags/api/","section":"Tags","summary":"","title":"API","type":"tags"},{"content":" Img2color获取图片主色调API配置 # 准备 # 从Github Fork项目anzhiyu-c/img2color-go: 一个获取图片主色调GO API # 部署 # 在这里我使用Vercel来部署。\n（注意如果要在国内访问，记得绑定自定义域名）\n在设置中找到Domains,绑定域名。\n如果现在使用API是不可用的，我们需要环境变量。\n在Settings\u0026gt;Environment Variables 添加新的环境变量。\nPORT=3000\rUSE_REDIS_CACHE=false\rUSE_MONGODB=false 这样我们就成功部署了。\n使用 # 我们需要一个图片链接，例子： https://img.textline.top/file/1740571613753_GDKWatch.png\n（你的域名 + api?img= + 链接） = api获取主色调\n例子：\nhttps://imgcolor.textline.top/api?img=https://img.textline.top/file/1740571613753_GDKWatch.png\n","date":"2025-00-00","externalUrl":null,"permalink":"/blogs/img2color%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E4%B8%BB%E8%89%B2%E8%B0%83api%E9%85%8D%E7%BD%AE/","section":"Blogs","summary":"\u003ch3 class=\"relative group\"\u003eImg2color获取图片主色调API配置 \n    \u003cdiv id=\"img2color%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E4%B8%BB%E8%89%B2%E8%B0%83api%E9%85%8D%E7%BD%AE\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#img2color%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E4%B8%BB%E8%89%B2%E8%B0%83api%E9%85%8D%E7%BD%AE\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e准备 \n    \u003cdiv id=\"%E5%87%86%E5%A4%87\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%87%86%E5%A4%87\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\n\n\u003ch4 class=\"relative group\"\u003e从Github Fork项目\u003ca href=\"https://github.com/anzhiyu-c/img2color-go\" target=\"_blank\"\u003eanzhiyu-c/img2color-go: 一个获取图片主色调GO API\u003c/a\u003e \n    \u003cdiv id=\"%E4%BB%8Egithub-fork%E9%A1%B9%E7%9B%AEanzhiyu-cimg2color-go-%E4%B8%80%E4%B8%AA%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E4%B8%BB%E8%89%B2%E8%B0%83go-apihttpsgithubcomanzhiyu-cimg2color-go\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E4%BB%8Egithub-fork%E9%A1%B9%E7%9B%AEanzhiyu-cimg2color-go-%E4%B8%80%E4%B8%AA%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E4%B8%BB%E8%89%B2%E8%B0%83go-apihttpsgithubcomanzhiyu-cimg2color-go\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h4\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e部署 \n    \u003cdiv id=\"%E9%83%A8%E7%BD%B2\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E9%83%A8%E7%BD%B2\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e在这里我使用\u003cstrong\u003eVercel\u003c/strong\u003e来部署。\u003c/p\u003e","title":"Img2color获取图片主色调API配置","type":"blogs"},{"content":"","date":"2024-00-00","externalUrl":null,"permalink":"/tags/python/","section":"Tags","summary":"","title":"Python","type":"tags"},{"content":" Python 复习笔记 # 列表 # 列表的查询功能（方法） # •查找某元素的下标\n功能：查找指定元素在列表的下标，如果找不到，报错ValueError\n语法：列表 .index ( 元素 )\n​ index就是列表对象（变量）内置的方法（函数）\n列表的修改功能（方法） # •修改特定位置（索引）的元素值：\n语法：列表[下标] =值\n可以使用如上语法，直接对指定下标（正向、反向下标均可）的值进行：重新赋值（修改）\n•插入元素：\n语法：列表.insert(下标元素)，在指定的下标位置，插入指定的元素\n•追加元素：\n语法：列表.append(元素)，将指定元素，追加到列表的尾部\n•追加元素方式2：\n语法：列表.extend(其它数据容器)，将其它数据容器的内容取出，依次追加到列表尾部\n•删除元素：\n语法1： del 列表[下标]\n语法2：列表.pop(下标)\n•删除某元素在列表中的第一个匹配项（从前到后匹配）\n语法：列表.remove(元素)\n•清空列表内容，语法：列表.clear()\n•统计某元素在列表内的数量\n•统计列表内，有多少元素\n语法：len ( 列表 )\n可以得到一个int数字，表示列表内的元素数量\n•访问一定范围的元素，可生成一个新序列\n语法：listName[start : end : step]\nstart表示切片的开始索引位置（包括该位置），该参数不可以指定，默认为0，即从列表开头切片；\nend表示切片的结束索引位置（不包括该位置），如果不指定，则默认列表长度；\nstep表示在切片“步长”，即step的值大于1时，若进行切片操作获取列表元素，则会“跳跃式”获取元素。\n切片语法 含 义 List[m:n] 得到一个list包含list中从索引m到n-1的所有元素 List[:]或list[::] 得到一个与list一样的新列表 List[m:] 得到一个list包含从list[m]到列表末尾的所有元素 List[:m] 得到一个list包含从列表开始到索引m-1的所有元素 List[m:n:k] 得到一个list包含从列表索引为m的元素开始，每隔k个取一次，直到索引为n-1的元素 切片示例\nspList=[\u0026lsquo;a\u0026rsquo;,\u0026lsquo;b\u0026rsquo;,\u0026lsquo;c\u0026rsquo;,\u0026rsquo;d\u0026rsquo;,\u0026rsquo;e\u0026rsquo;,\u0026lsquo;f\u0026rsquo;,\u0026lsquo;g\u0026rsquo;,\u0026lsquo;h\u0026rsquo;,\u0026lsquo;i\u0026rsquo;,\u0026lsquo;j\u0026rsquo;,\u0026lsquo;k\u0026rsquo;]\nspList[::] # 所有元素\n运行结果：[\u0026lsquo;a\u0026rsquo;, \u0026lsquo;b\u0026rsquo;, \u0026lsquo;c\u0026rsquo;, \u0026rsquo;d\u0026rsquo;, \u0026rsquo;e\u0026rsquo;, \u0026lsquo;f\u0026rsquo;, \u0026lsquo;g\u0026rsquo;, \u0026lsquo;h\u0026rsquo;, \u0026lsquo;i\u0026rsquo;, \u0026lsquo;j\u0026rsquo;, \u0026lsquo;k\u0026rsquo;]\nspList[:] # 所有元素\n运行结果：[\u0026lsquo;a\u0026rsquo;, \u0026lsquo;b\u0026rsquo;, \u0026lsquo;c\u0026rsquo;, \u0026rsquo;d\u0026rsquo;, \u0026rsquo;e\u0026rsquo;, \u0026lsquo;f\u0026rsquo;, \u0026lsquo;g\u0026rsquo;, \u0026lsquo;h\u0026rsquo;, \u0026lsquo;i\u0026rsquo;, \u0026lsquo;j\u0026rsquo;, \u0026lsquo;k\u0026rsquo;]\nspList[4:9] # 从第5个到第9个元素\n运行结果：[\u0026rsquo;e\u0026rsquo;, \u0026lsquo;f\u0026rsquo;, \u0026lsquo;g\u0026rsquo;, \u0026lsquo;h\u0026rsquo;, \u0026lsquo;i\u0026rsquo;]\nspList[:4] # 从开始到第4个元素\n运行结果：[\u0026lsquo;a\u0026rsquo;, \u0026lsquo;b\u0026rsquo;, \u0026lsquo;c\u0026rsquo;, \u0026rsquo;d\u0026rsquo;]\nspList[::3] # 从开始每隔3个抽1个\n运行结果：[\u0026lsquo;a\u0026rsquo;, \u0026rsquo;d\u0026rsquo;, \u0026lsquo;g\u0026rsquo;, \u0026lsquo;j\u0026rsquo;]\nspList[::-1] # 从结尾到首个元素\n运行结果：[\u0026lsquo;k\u0026rsquo;, \u0026lsquo;j\u0026rsquo;, \u0026lsquo;i\u0026rsquo;, \u0026lsquo;h\u0026rsquo;, \u0026lsquo;g\u0026rsquo;, \u0026lsquo;f\u0026rsquo;, \u0026rsquo;e\u0026rsquo;, \u0026rsquo;d\u0026rsquo;, \u0026lsquo;c\u0026rsquo;, \u0026lsquo;b\u0026rsquo;, \u0026lsquo;a\u0026rsquo;]\n**del()**函数可以用于从列表中移除一个切片\n语法：del listName[start : end : step]\n编号 使用方式 作用 1 列表.append(元素) 向列表中追加一个元素 2 列表.extend(容器) 将数据容器的内容依次取出，追加到列表尾部 3 列表.insert(下标, 元素) 在指定下标处，插入指定的元素 4 del 列表[下标] 删除列表指定下标元素 5 列表.pop(下标) 删除列表指定下标元素 6 列表.remove(元素) 从前向后，删除此元素第一个匹配项 7 列表.clear() 清空列表 8 列表.count(元素) 统计此元素在列表中出现的次数 9 列表.index(元素) 查找指定元素在列表的下标 找不到报错ValueError 10 len(列表) 统计容器内有多少元素 元组的相关操作 # 编号 方法 作用 1 index() 查找某个数据，如果数据存在返回对应的下标，否则报错 2 count() 统计某个数据在当前元组出现的次数 3 len(元组) 统计元组内的元素个数 4 del 元组 删除元组 不可以修改元组的内容，否则会直接报错 # 可以修改元组内的list的内容（修改元素、增加、删除、反转等） # 元组的特点\n•可以容纳多个数据\n•可以容纳不同类型的数据（混装）\n•数据是有序存储的（下标索引）\n•允许重复数据存在\n•不可以修改（增加或删除元素等）\n•支持for循环、while循环\n多数特性和list一致，不同点在于不可修改的特性。\n元组定义：定义元组使用小括号，且使用逗号隔开各个数据，数据可以是不同的数据类型。\n注意：元组只有一个数据，这个数据后面要添加逗号，当创建包含多个元素的元组时则没有这个限制,元组支持嵌套。\n首先，因为集合是无序的，所以集合不支持：下标索引访问\n但是集合和列表一样，是允许修改的，所以我们来看看集合的修改方法。\n•添加新元素\n语法1：集合.add(元素)。将指定元素，添加到集合内 语法2：集合.update(元素)。将指定多个元素，添加到集合内\n结果：集合本身被修改，添加了新元素 结果：新元素被依次取出添加进集合\n•移除元素\u0026mdash;删除元素\n语法1：集合.remove(元素)，将指定元素，从集合内移除 语法2：集合.discard (元素)，将指定元素，从集合内移除结果：集合被修改，移除元素(删除不存在的元素会报错） 结果：集合被修改，移除元素(删除不存在的元素不会报错）\n•从集合中随机取出元素\u0026mdash;删除元素\n语法1：集合.pop()，功能，从集合中随机取出一个元素 语法2：集合.remove(元素)\n结果：会得到一个元素的结果。同时集合本身被修改，元素被移除\n•清空集合\u0026mdash;删除元素\n语法1：集合.clear()，功能，清空集合 语法2：del 集合，功能，清空集合\n结果：集合本身被清空，返回空集合 结果：集合整体被清空\n编号 操作 说明 1 集合.add(元素)、集合.update(元素) 集合内添加一个元素；添加多个，依次添加 2 集合.remove(元素)、集合.discard(元素) 移除集合内指定的元素 3 集合.pop() 从集合中随机取出一个元素 4 集合.clear()、del 集合 将集合清空 5 集合1.difference(集合2) 得到一个新集合，内含2个集合的差集 原有的2个集合内容不变 6 集合1.difference_update(集合2) 在集合1中，删除集合2中存在的元素 集合1被修改，集合2不变 7 集合1.union(集合2) 得到1个新集合，内含2个集合的全部元素 原有的2个集合内容不变 8 len(集合) 得到一个整数，记录了集合的元素数量 集合的特点 # •可以容纳多个数据\n•可以容纳不同类型的数据（混装）\n•数据是无序存储的（不支持下标索引）\n•不允许重复数据存在\n•可以修改（增加或删除元素等）\n•支持for循环，不支持while循环\n•支持判断元素是否在集合中\n字典 # 编号 操作 说明 1 字典[Key]； 获取指定Key对应的Value值 2 字典.update(key1:value,key2:value,……) 将另一个键值对的一次性添加到当前字典对象中 3 字典[Key] = Value 添加或更新键值对 4 字典.pop(Key) 取出Key对应的Value并在字典内删除此Key的键值对 5 字典.clear() 清空字典 6 字典.keys() 获取字典的全部Key，可用于for循环遍历字典 7 len(字典) 计算字典内的元素数量 字符串 # 方法名称 说 明 方法名称 说 明 find( ) 查找字符串首次出现位置 split( ) 以指定字符为分隔符分割字符串 rfind( ) 查找字符串最后出现位置 rsplit( ) 从右端分割字符串 index( ) 返回字符串首次出现位置 partition( ) 分割字符串为3部分 rindex( ) 返回字符串最后出现位置 rpartition( ) 从右端分割字符串为3部分 count( ) 返回字符串出现次数 join( ) 与split相反 lower( ) 转换为小写 replace( ) 替换字符或字符串 upper( ) 转换为大写 maketrans( ) 生成字符映射表 capitalize( ) 首字母转换为大写 translate( ) 按映射表转换字符串并替换 title( ) 字符串每个单词首字母转换为大写 strip( ) 删除两端空格或连续指定字符 swapcase( ) 大小写互换 rstrip( ) 删除右端空格或连续指定字符 startswith ( ) 判断是否以指定字符串开始 lstrip( ) 删除左端空格或连续指定字符 endswith ( ) 判断是否以指定字符串结束 islower( ) 判断是否是小写字母 isalnum ( ) 判断是否为数字或字母 center( ) 返回指定宽度、原串居中的新串 isalpha ( ) 判断是否为字母 ljust( ) 返回指定宽度、原串居左的新串 isdigit( ) 判断是否是数字 rjust( ) 返回指定宽度、原串居右的新串 isspace ( ) 判断是否是空格 eval( ) 字符串转化为数值 compress() 压缩 decompress() 解压缩 容器通用功能总览 # 功能 描述 通用for循环 遍历容器（字典是遍历key） max 容器内最大元素 min() 容器内最小元素 len() 容器元素个数 list() 转换为列表 tuple() 转换为元组 str() 转换为字符串 set() 转换为集合 sorted(序列, [reverse=True]) 排序，reverse=True表示降序 得到一个排好序的列表 正则表达式的基本语法 # 元字符 功 能 示例 • 匹配任意字符（不包括换行符（\\n）），.匹配点本身 f.r：匹配在字母’f’、’r’之间的任意一个字符。如fur、far、for。 * 匹配0次或多次前面出现字符或子模式。 ‘fo*’匹配”food”中”foo” + 匹配1次或多次前面出现子符或子模块，如([a-z]+.com) ‘zo+’ 能匹配 ‘zo’ 以及 ‘zoo’ - 用在[ ]之内用来表示范围。 [0-9]、[a-z]、[A-Z] | 匹配位于|之前或之后的字符。 Python|Pearl或P(ython|erl)：匹配’Python’或’Pearl’ ^ 匹配行首，匹配以^后面的字符开头的字符串。 ^http：匹配http://www.sohu.com $ 匹配行尾，匹配以$之前的字符结束的字符串。 ‘t$’并不会匹配 “eater”中的 ‘t’,但是会匹配 ‘eat’ 中的 ‘t’. ? 匹配位于“?”之前的0次或1次前面出现的正则表达式。 ‘do(es)?’ 可以匹配 ‘do’或 ‘does’ 中的’do’ 。 \\ 转义字符 \\num num为正整数。 ‘(.)\\1’匹配两个连续的相同字符 \\f 匹配换页符 \\n 匹配换行符 \\r 匹配回车符 元字符 功 能 \\b 匹配单词头或单词尾 ‘er\\b’ 可以匹配’never’ 中的 ‘er’，但不能匹配 “verb”中的 ‘er’。 \\B 与\\b含义相反，不匹配单词头或尾 ‘er\\B’ 能匹配 “verb” 中的 ‘er’，但不能匹配 “never” 中的 ‘er’。 \\d 匹配任何数字，相当于[0-9] ‘\\d’能匹配“20大数据专业”中的’20’ \\D 与\\d含义相反，相当于[^0-9]，即不包括0-9之间数字 ，^在中括号里与前面“^在字符串首”的含义不同 ‘\\D’能匹配“20大数据专业”中的“大数据专业” \\s 匹配任何空白字符，包括空格、制表符、换页符，相当于[\\f\\n\\r\\t\\v] ‘\\s’能匹配 “python word” 中的“word” \\S 与\\s含义相反，相当于[^\\f\\n\\r\\t\\v]，即不包括空格、制表符、换页符等 ‘\\S’能匹配 “python word”中“python” \\w 匹配任何字母、数字以及下划线，相当于[a-zA-z0-9] ‘\\w’能匹配 “python”中的’p’、’y’、’t’、’h’、’o’、’n’ \\W 与\\w含义相反，与[^a-zA-z0-9]等效，即除去a-zA-z0-9之外的字符 ‘\\W’能匹配 “python#”中的’#’ ( ) 将位于括号内内容作为一个整体来对待 (.)\\1+：匹配二次或多次连续重复出现的任意字符 { m,n**}** 至少重复m次，最多重复n次{ }前面的字符（串）或子模式(….) \u0026ldquo;o{1,3}\u0026rdquo; 将匹配 \u0026ldquo;fooooood\u0026rdquo; 中的前三个 o [ ] 匹配位于[ ]中的任意一个字符 [PIW]ython：匹配’Python’、’Iython’或’Wython’ [^xyz] 反向字符集，匹配除x,y,z之外的任意字符 [^abc]：匹配一个除’a’、’b’和’c’之外的任意字符 [a-z] 字符范围，匹配任意小写英文字符 [a-z]匹配“python3”中的’p’、’y’、’t’、’h’、’o’、’n’ [^a-z] 反向范围字符，匹配除小写英文字母之外的任意字符 [^a-z]匹配“python3”中的‘3’ re 模块常用的方法 # 方 法 功 能 compile(pattern[,flags]) 创建模式对象 search( pattern,string [,flags]) 在整字符串中寻找模式，返回match对象或None match( pattern,string [,flags]) 从字符串首端匹配模式，返回match对象或None findall ( pattern,string [,flags]) 返回字符串中模式的所有匹配项的列表 finditer ( pattern,string [,flags]) 与findall()函数相同，但返回的不是一个列表，而是一个迭代器。对于每一次匹配，迭代器都返回一个匹配对象 split( pattern,string [, maxsplit =0]) 根据正则表达式的模式分隔符，split函数将字符串分割为列表，然后返回成功匹配的列表，分隔最多操作max次（默认分割所有匹配成功的位置） sub( pattern,repl,string [,count=0]) 使用repl替换所有正则表达式的模式在字符串中出现的位置，除非定义了count，否则就将替换所有出现的位置 subn ( pattern,repl,string ) 使用repl替换所有正则表达式的模式在字符串中出现的次数 escape(string) 将字符串中所有特殊正则表达式字符转义 purge() 清除隐式编译的正则表达式模式 group( num =0) 返回整个匹配对象，或者编号为num的特定子组 groups(default=None) 返回一个包含所有匹配子组的元组（如果没有成功匹配，则返回一个空元组） groupdict (default=None) 返回一个包含所有匹配的命名子组的字典，所有的子组名称作为字典的键（如果没有成功匹配，则返回一个空字典） 参数 flags 功 能 re.I 、 re.IGNORECASE 忽略大小写的匹配 re.L 、 re.LOCALE 根据所使用的本地语言环境通过\\w、\\W、\\b、\\B、\\s、\\S实现匹配 re. U 、 re.UNICODE 根据全球统一的Unicode字符集解析字符影响\\w, \\W, \\b, \\B的含义 re. S 、 re.DOTALL 使 . 匹配包括换行在内的所有字符，影响 ^ 和 $ re.M 、 re.MULTILINE 多行匹配，影响 ^ 和 $ re.X 、 re.VERBOSE 这个选项忽略规则表达式中的空白和注释，并允许使用 ’#’ 来引导一个注释。这样可以让你把规则写得更美观些。 文件 # 操作 功能 文件对象 = open(file, mode, encoding) 打开文件获得文件对象 文件对象.read(num) 读取指定长度字节 不指定num读取文件全部 文件对象.readline() 读取一行 文件对象.readlines() 读取全部行，得到列表 for 临时变量 in 文件对象 for循环文件行，一次循环得到一行数据 文件对象.close() 关闭文件对象 with open() as f 通过with open语法打开文件，可以自动关闭 mode 常用的三种基础访问模式\nr 以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。 w 打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，原有内容会被删除。 如果该文件不存在，创建新文件。 a 打开一个文件用于追加。如果该文件已存在，新的内容将会被写入到已有内容之后。 如果该文件不存在，创建新文件进行写入。 os.path模块 # 路径 # 方 法 功能说明 access( path,mode ) 按照mode指定的权限 open( path,flags,mode =o0777,*, dir_fd =None) 按照mode指定的权限打开文件，默认权限为可读、可写、可执行 chmod ( path,mode ,*, dir_fd =None, follow_symlinks =True) 改变文件的访问权限 remove(path) 删除指定的文件 rename( src,dst ) 重命名文件或目录 stat(path) 返回文件的所有属性 fstat (path) 返回打开文件的所有属性 listdir (path=\u0026rsquo;.\u0026rsquo;) 返回path目录下的文件和目录列表（\u0026rsquo;.\u0026lsquo;表示当前目录，\u0026rsquo;..\u0026lsquo;表示上一级目录） getcwd () 返回当前工作目录 chdir (path) 改变工作目录 mkdir (path) 创建单层目录，如该目录已存在抛出异常 rmdir (path) 删除单层目录，如该目录非空则抛出异常 system(command) 运行系统的shell命令 walk(top) 遍历top路径以下所有的子目录，返回一个三元组：(路径, [包含目录], [包含文件]) 常用文件操作方法 # 函数 描述 abspath(path) 返回绝对路径 basename(path) 去掉目录路径，单独返回文件名 dirname(path) 返回目录路径 exists(path) 判断文件是否存在 getatime(filename) 返回文件最后访问时间 getctime(filename) 返回文件创建时间 getmtime(filename) 返回文件最后修改时间 getsize(filename) 返回文件大小 isabs(path) 判断path是否为绝对路径 isdir(path) 判断path是否为目录 isfile(path) 判断path是否为文件 samefile(path1, path2) 判断path1和path2两个路径是否指向同一个文件 split(path) 对路径进行分割，以列表形式返回 splitext(path) 对路径进行分割，返回扩展名 splitdrive(path) 对路径进行分割，返回驱动器名 shutil模块 # shutil模块为高级的文件、文件夹、压缩包处理模块，提供了大量的方法支持文件和文件夹操作，详细的方法可使用dir(shutil)查看。\nimport shutil\ndir(shutil)\n方法 功能 copyfileobj(fsrc, fdst[, length]) 将文件内容拷贝到另一个文件中，可以拷贝部分内容 copyfile(src, dst) 拷贝文件 copymode(src, dst) 仅拷贝权限，内容、组、用户均不变 copystat(src, dst) 拷贝状态的信息，包括：mode bits, atime, mtime, flags copy(src, dst) 拷贝文件和权限 copy2(src, dst) 拷贝文件和状态信息 make_archive(zipfile, srcdir) 将文件夹中所有文件压缩成指定的文件 unpack_archive(zipfile, dstdir) 将压缩文件解压到指定的文件夹下 copytree(src, dst, symlinks=False, ignore=None) 递归的拷贝文件 rmtree(path[, ignore_errors[, onerror]]) 递归的删除文件 move(src, dst) 递归的移动文件 异常例子 # try:\nf = open('test.txt', 'r')\nexcept Exception as e:\nf = open('test.txt', 'w')\nelse:\nprint('没有异常，真开心')\nfinally:\ntry:\nprint(num)\nexcept (NameError, ZeroDivisionError) as e:\nprint(e)\n模块 # 什么是Python的包？ 包就是一个文件夹，里面可以存放许多Python的模块（代码文件），通过包，在逻辑上将一批模块归为一类，方便使用。\ninit.py文件的作用？ 创建包会默认自动创建的文件，通过这个文件来表示一个文件夹是Python的包，而非普通的文件夹。\n__all__变量的作用？ 同模块中学习到的是一个作用，控制 import * 能够导入的内容\n文档字符串 # 如果函数定义中包含文档字符串，悬停时会显示这些说明。文档字符串提供了函数的用途、参数说明、返回值等。例\npython\ndef my_function(param1, param2=None):\r\u0026#34;\u0026#34;\u0026#34;\rThis function does something useful.\rParameters:\rparam1 (int): The first parameter.\rparam2 (str, optional): The second parameter. Default is None.\rReturns:\rbool: The return value. True for success, False otherwise.\r\u0026#34;\u0026#34;\u0026#34;\rreturn True ","date":"2024-00-00","externalUrl":null,"permalink":"/blogs/2025/python-%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/","section":"Blogs","summary":"\u003ch1 class=\"relative group\"\u003ePython 复习笔记 \n    \u003cdiv id=\"python-%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#python-%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\n\n\u003ch3 class=\"relative group\"\u003e\u003cstrong\u003e列表\u003c/strong\u003e \n    \u003cdiv id=\"%E5%88%97%E8%A1%A8\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%88%97%E8%A1%A8\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e\n  \u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://s21.ax1x.com/2024/12/24/pAjNDxS.png\" alt=\"image-20241224200030309\" /\u003e\n    \n  \u003c/figure\u003e\n\u003c/p\u003e","title":"Python 复习笔记","type":"blogs"},{"content":" Python复习粗略带过 # 列表 # 编号 使用方式 作用 1 列表.append(元素) 向列表中追加一个元素 2 列表.extend(容器) 将数据容器的内容依次取出，追加到列表尾部 3 列表.insert(下标, 元素) 在指定下标处，插入指定的元素 4 del 列表[下标] 删除列表指定下标元素 5 列表.pop(下标) 删除列表指定下标元素 6 列表.remove(元素) 从前向后，删除此元素第一个匹配项 7 列表.clear() 清空列表 8 列表.count(元素) 统计此元素在列表中出现的次数 9 列表.index(元素) 查找指定元素在列表的下标 找不到报错ValueError 10 len(列表) 统计容器内有多少元素 元组 # 编号 方法 作用 1 index() 查找某个数据，如果数据存在返回对应的下标，否则报错 2 count() 统计某个数据在当前元组出现的次数 3 len(元组) 统计元组内的元素个数 4 del 元组 删除元组 集合 # 编号 操作 说明 1 集合.add(元素)、集合.update(元素) 集合内添加一个元素；添加多个，依次添加 2 集合.remove(元素)、集合.discard(元素) 移除集合内指定的元素 3 集合.pop() 从集合中随机取出一个元素 4 集合.clear()、del 集合 将集合清空 5 集合1.difference(集合2) 得到一个新集合，内含2个集合的差集 原有的2个集合内容不变 6 集合1.difference_update(集合2) 在集合1中，删除集合2中存在的元素 集合1被修改，集合2不变 7 集合1.union(集合2) 得到1个新集合，内含2个集合的全部元素 原有的2个集合内容不变 8 len(集合) 得到一个整数，记录了集合的元素数量 字典 # 编号 操作 说明 1 字典[Key]； 获取指定Key对应的Value值 2 字典.update(key1:value,key2:value,……) 将另一个键值对的一次性添加到当前字典对象中 3 字典[Key] = Value 添加或更新键值对 4 字典.pop(Key) 取出Key对应的Value并在字典内删除此Key的键值对 5 字典.clear() 清空字典 6 字典.keys() 获取字典的全部Key，可用于for循环遍历字典 7 len(字典) 计算字典内的元素数量 字符串 # 方法名称 说 明 方法名称 说 明 find( ) 查找字符串首次出现位置 split( ) 以指定字符为分隔符分割字符串 rfind( ) 查找字符串最后出现位置 rsplit( ) 从右端分割字符串 index( ) 返回字符串首次出现位置 partition( ) 分割字符串为3部分 rindex( ) 返回字符串最后出现位置 rpartition( ) 从右端分割字符串为3部分 count( ) 返回字符串出现次数 join( ) 与split相反 lower( ) 转换为小写 replace( ) 替换字符或字符串 upper( ) 转换为大写 maketrans( ) 生成字符映射表 capitalize( ) 首字母转换为大写 translate( ) 按映射表转换字符串并替换 title( ) 字符串每个单词首字母转换为大写 strip( ) 删除两端空格或连续指定字符 swapcase( ) 大小写互换 rstrip( ) 删除右端空格或连续指定字符 startswith ( ) 判断是否以指定字符串开始 lstrip( ) 删除左端空格或连续指定字符 endswith ( ) 判断是否以指定字符串结束 islower( ) 判断是否是小写字母 isalnum ( ) 判断是否为数字或字母 center( ) 返回指定宽度、原串居中的新串 isalpha ( ) 判断是否为字母 ljust( ) 返回指定宽度、原串居左的新串 isdigit( ) 判断是否是数字 rjust( ) 返回指定宽度、原串居右的新串 isspace ( ) 判断是否是空格 eval( ) 字符串转化为数值 compress() 压缩 decompress() 解压缩 容器通用功能总览 # 功能 描述 通用for循环 遍历容器（字典是遍历key） max 容器内最大元素 min() 容器内最小元素 len() 容器元素个数 list() 转换为列表 tuple() 转换为元组 str() 转换为字符串 set() 转换为集合 sorted(序列, [reverse=True]) 排序，reverse=True表示降序 得到一个排好序的列表 正则表达式的基本语法 # 元字符 功 能 示例 • 匹配任意字符（不包括换行符（\\n）），.匹配点本身 f.r：匹配在字母’f’、’r’之间的任意一个字符。如fur、far、for。 * 匹配0次或多次前面出现字符或子模式。 ‘fo*’匹配”food”中”foo” + 匹配1次或多次前面出现子符或子模块，如([a-z]+.com) ‘zo+’ 能匹配 ‘zo’ 以及 ‘zoo’ - 用在[ ]之内用来表示范围。 [0-9]、[a-z]、[A-Z] | 匹配位于|之前或之后的字符。 Python|Pearl或P(ython|erl)：匹配’Python’或’Pearl’ ^ 匹配行首，匹配以^后面的字符开头的字符串。 ^http：匹配http://www.sohu.com $ 匹配行尾，匹配以$之前的字符结束的字符串。 ‘t$’并不会匹配 “eater”中的 ‘t’,但是会匹配 ‘eat’ 中的 ‘t’. ? 匹配位于“?”之前的0次或1次前面出现的正则表达式。 ‘do(es)?’ 可以匹配 ‘do’或 ‘does’ 中的’do’ 。 \\ 转义字符 \\num num为正整数。 ‘(.)\\1’匹配两个连续的相同字符 \\f 匹配换页符 \\n 匹配换行符 \\r 匹配回车符 元字符 功 能 \\b 匹配单词头或单词尾 ‘er\\b’ 可以匹配’never’ 中的 ‘er’，但不能匹配 “verb”中的 ‘er’。 \\B 与\\b含义相反，不匹配单词头或尾 ‘er\\B’ 能匹配 “verb” 中的 ‘er’，但不能匹配 “never” 中的 ‘er’。 \\d 匹配任何数字，相当于[0-9] ‘\\d’能匹配“20大数据专业”中的’20’ \\D 与\\d含义相反，相当于[^0-9]，即不包括0-9之间数字 ，^在中括号里与前面“^在字符串首”的含义不同 ‘\\D’能匹配“20大数据专业”中的“大数据专业” \\s 匹配任何空白字符，包括空格、制表符、换页符，相当于[\\f\\n\\r\\t\\v] ‘\\s’能匹配 “python word” 中的“word” \\S 与\\s含义相反，相当于[^\\f\\n\\r\\t\\v]，即不包括空格、制表符、换页符等 ‘\\S’能匹配 “python word”中“python” \\w 匹配任何字母、数字以及下划线，相当于[a-zA-z0-9] ‘\\w’能匹配 “python”中的’p’、’y’、’t’、’h’、’o’、’n’ \\W 与\\w含义相反，与[^a-zA-z0-9]等效，即除去a-zA-z0-9之外的字符 ‘\\W’能匹配 “python#”中的’#’ ( ) 将位于括号内内容作为一个整体来对待 (.)\\1+：匹配二次或多次连续重复出现的任意字符 { m,n**}** 至少重复m次，最多重复n次{ }前面的字符（串）或子模式(….) \u0026ldquo;o{1,3}\u0026rdquo; 将匹配 \u0026ldquo;fooooood\u0026rdquo; 中的前三个 o [ ] 匹配位于[ ]中的任意一个字符 [PIW]ython：匹配’Python’、’Iython’或’Wython’ [^xyz] 反向字符集，匹配除x,y,z之外的任意字符 [^abc]：匹配一个除’a’、’b’和’c’之外的任意字符 [a-z] 字符范围，匹配任意小写英文字符 [a-z]匹配“python3”中的’p’、’y’、’t’、’h’、’o’、’n’ [^a-z] 反向范围字符，匹配除小写英文字母之外的任意字符 [^a-z]匹配“python3”中的‘3’ re 模块常用的方法 # 方 法 功 能 compile(pattern[,flags]) 创建模式对象 search( pattern,string [,flags]) 在整字符串中寻找模式，返回match对象或None match( pattern,string [,flags]) 从字符串首端匹配模式，返回match对象或None findall ( pattern,string [,flags]) 返回字符串中模式的所有匹配项的列表 finditer ( pattern,string [,flags]) 与findall()函数相同，但返回的不是一个列表，而是一个迭代器。对于每一次匹配，迭代器都返回一个匹配对象 split( pattern,string [, maxsplit =0]) 根据正则表达式的模式分隔符，split函数将字符串分割为列表，然后返回成功匹配的列表，分隔最多操作max次（默认分割所有匹配成功的位置） sub( pattern,repl,string [,count=0]) 使用repl替换所有正则表达式的模式在字符串中出现的位置，除非定义了count，否则就将替换所有出现的位置 subn ( pattern,repl,string ) 使用repl替换所有正则表达式的模式在字符串中出现的次数 escape(string) 将字符串中所有特殊正则表达式字符转义 purge() 清除隐式编译的正则表达式模式 group( num =0) 返回整个匹配对象，或者编号为num的特定子组 groups(default=None) 返回一个包含所有匹配子组的元组（如果没有成功匹配，则返回一个空元组） groupdict (default=None) 返回一个包含所有匹配的命名子组的字典，所有的子组名称作为字典的键（如果没有成功匹配，则返回一个空字典） 参数 flags 功 能 re.I 、 re.IGNORECASE 忽略大小写的匹配 re.L 、 re.LOCALE 根据所使用的本地语言环境通过\\w、\\W、\\b、\\B、\\s、\\S实现匹配 re. U 、 re.UNICODE 根据全球统一的Unicode字符集解析字符影响\\w, \\W, \\b, \\B的含义 re. S 、 re.DOTALL 使 . 匹配包括换行在内的所有字符，影响 ^ 和 $ re.M 、 re.MULTILINE 多行匹配，影响 ^ 和 $ re.X 、 re.VERBOSE 这个选项忽略规则表达式中的空白和注释，并允许使用 ’#’ 来引导一个注释。这样可以让你把规则写得更美观些。 文件 # 操作 功能 文件对象 = open(file, mode, encoding) 打开文件获得文件对象 文件对象.read(num) 读取指定长度字节 不指定num读取文件全部 文件对象.readline() 读取一行 文件对象.readlines() 读取全部行，得到列表 for 临时变量 in 文件对象 for循环文件行，一次循环得到一行数据 文件对象.close() 关闭文件对象 with open() as f 通过with open语法打开文件，可以自动关闭 mode 常用的三种基础访问模式\nr 以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。 w 打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，原有内容会被删除。 如果该文件不存在，创建新文件。 a 打开一个文件用于追加。如果该文件已存在，新的内容将会被写入到已有内容之后。 如果该文件不存在，创建新文件进行写入。 os.path模块 # 路径 # 方 法 功能说明 access( path,mode ) 按照mode指定的权限 open( path,flags,mode =o0777,*, dir_fd =None) 按照mode指定的权限打开文件，默认权限为可读、可写、可执行 chmod ( path,mode ,*, dir_fd =None, follow_symlinks =True) 改变文件的访问权限 remove(path) 删除指定的文件 rename( src,dst ) 重命名文件或目录 stat(path) 返回文件的所有属性 fstat (path) 返回打开文件的所有属性 listdir (path=\u0026rsquo;.\u0026rsquo;) 返回path目录下的文件 ","date":"2024-00-00","externalUrl":null,"permalink":"/blogs/2025/python%E5%A4%8D%E4%B9%A0%E7%B2%97%E7%95%A5%E5%B8%A6%E8%BF%87/","section":"Blogs","summary":"\u003ch1 class=\"relative group\"\u003ePython复习粗略带过 \n    \u003cdiv id=\"python%E5%A4%8D%E4%B9%A0%E7%B2%97%E7%95%A5%E5%B8%A6%E8%BF%87\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#python%E5%A4%8D%E4%B9%A0%E7%B2%97%E7%95%A5%E5%B8%A6%E8%BF%87\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e列表 \n    \u003cdiv id=\"%E5%88%97%E8%A1%A8\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%88%97%E8%A1%A8\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e编号\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e使用方式\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e作用\u003c/strong\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e1\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e列表.append(元素)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e向列表中追加一个元素\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e2\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e列表.extend(容器)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e将数据容器的内容依次取出，追加到列表尾部\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e3\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e列表.insert(下标, 元素)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e在指定下标处，插入指定的元素\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e4\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003edel 列表[下标]\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e删除列表指定下标元素\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e5\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e列表.pop(下标)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e删除列表指定下标元素\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e6\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e列表.remove(元素)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e从前向后，删除此元素第一个匹配项\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e7\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e列表.clear()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e清空列表\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e8\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e列表.count(元素)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e统计此元素在列表中出现的次数\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e9\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e列表.index(元素)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e查找指定元素在列表的下标  找不到报错ValueError\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e10\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003elen(列表)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e统计容器内有多少元素\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e\u003cstrong\u003e元组\u003c/strong\u003e \n    \u003cdiv id=\"%E5%85%83%E7%BB%84\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%85%83%E7%BB%84\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e编号\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e方法\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e作用\u003c/strong\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e1\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eindex()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e查找某个数据，如果数据存在返回对应的下标，否则报错\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e2\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003ecount()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e统计某个数据在当前元组出现的次数\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e3\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003elen(元组)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e统计元组内的元素个数\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e4\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003edel 元组\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e删除元组\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e集合 \n    \u003cdiv id=\"%E9%9B%86%E5%90%88\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E9%9B%86%E5%90%88\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e编号\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e操作\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e说明\u003c/strong\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e1\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e集合.add(元素)、集合.update(元素)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e集合内添加一个元素；添加多个，依次添加\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e2\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e集合.remove(元素)、集合.discard(元素)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e移除集合内指定的元素\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e3\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e集合.pop()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e从集合中随机取出一个元素\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e4\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e集合.clear()、del 集合\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e将集合清空\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e5\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e集合1.difference(集合2)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e得到一个新集合，内含2个集合的差集  原有的2个集合内容不变\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e6\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e集合1.difference_update(集合2)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e在集合1中，删除集合2中存在的元素  集合1被修改，集合2不变\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e7\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e集合1.union(集合2)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e得到1个新集合，内含2个集合的全部元素  原有的2个集合内容不变\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e8\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003elen(集合)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e得到一个整数，记录了集合的元素数量\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e字典 \n    \u003cdiv id=\"%E5%AD%97%E5%85%B8\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%AD%97%E5%85%B8\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e编号\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e操作\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e说明\u003c/strong\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e1\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e字典[Key]；\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e获取指定Key对应的Value值\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e2\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e字典.update(key1:value,key2:value,……)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e将另一个键值对的一次性添加到当前字典对象中\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e3\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e字典[Key] = Value\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e添加或更新键值对\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e4\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e字典.pop(Key)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e取出Key对应的Value并在字典内删除此Key的键值对\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e5\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e字典.clear()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e清空字典\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e6\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e字典.keys()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e获取字典的全部Key，可用于for循环遍历字典\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e7\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003elen(字典)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e计算字典内的元素数量\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e字符串 \n    \u003cdiv id=\"%E5%AD%97%E7%AC%A6%E4%B8%B2\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e方法名称\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e说\u003c/strong\u003e  \u003cstrong\u003e明\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e方法名称\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e说\u003c/strong\u003e  \u003cstrong\u003e明\u003c/strong\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003efind( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e查找字符串首次出现位置\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003esplit( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e以指定字符为分隔符分割字符串\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003erfind( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e查找字符串最后出现位置\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003ersplit( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e从右端分割字符串\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003eindex( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e返回字符串首次出现位置\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003epartition( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e分割字符串为3部分\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003erindex( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e返回字符串最后出现位置\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003erpartition( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e从右端分割字符串为3部分\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003ecount( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e返回字符串出现次数\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003ejoin( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e与split相反\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003elower( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e转换为小写\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003ereplace( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e替换字符或字符串\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003eupper( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e转换为大写\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003emaketrans( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e生成字符映射表\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003ecapitalize( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e首字母转换为大写\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003etranslate( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e按映射表转换字符串并替换\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003etitle( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e字符串每个单词首字母转换为大写\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003estrip( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e删除两端空格或连续指定字符\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003eswapcase( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e大小写互换\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003erstrip( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e删除右端空格或连续指定字符\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003estartswith\u003c/strong\u003e \u003cstrong\u003e( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e判断是否以指定字符串开始\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003elstrip( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e删除左端空格或连续指定字符\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003eendswith\u003c/strong\u003e \u003cstrong\u003e( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e判断是否以指定字符串结束\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eislower( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e判断是否是小写字母\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003eisalnum\u003c/strong\u003e \u003cstrong\u003e( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e判断是否为数字或字母\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003ecenter( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e返回指定宽度、原串居中的新串\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003eisalpha\u003c/strong\u003e \u003cstrong\u003e( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e判断是否为字母\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eljust( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e返回指定宽度、原串居左的新串\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003eisdigit( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e判断是否是数字\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003erjust( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e返回指定宽度、原串居右的新串\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003eisspace\u003c/strong\u003e \u003cstrong\u003e( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e判断是否是空格\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003eeval( )\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e字符串转化为数值\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003ecompress()\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e压缩\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003edecompress()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e解压缩\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e\u003cstrong\u003e容器通用功能总览\u003c/strong\u003e \n    \u003cdiv id=\"%E5%AE%B9%E5%99%A8%E9%80%9A%E7%94%A8%E5%8A%9F%E8%83%BD%E6%80%BB%E8%A7%88\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%AE%B9%E5%99%A8%E9%80%9A%E7%94%A8%E5%8A%9F%E8%83%BD%E6%80%BB%E8%A7%88\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e功能\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e描述\u003c/strong\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e通用for循环\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e遍历容器（字典是遍历key）\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003emax\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e容器内最大元素\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003emin()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e容器内最小元素\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003elen()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e容器元素个数\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003elist()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e转换为列表\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003etuple()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e转换为元组\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003estr()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e转换为字符串\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eset()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e转换为集合\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003esorted(序列, [reverse=True])\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e排序，reverse=True表示降序  得到一个排好序的列表\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e\u003cstrong\u003e正则表达式的基本语法\u003c/strong\u003e \n    \u003cdiv id=\"%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e元字符\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e功\u003c/strong\u003e  \u003cstrong\u003e能\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e示例\u003c/strong\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e•\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配任意字符（不包括换行符（\\n）），.匹配点本身\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003ef.r：匹配在字母’f’、’r’之间的任意一个字符。如fur、far、for。\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e*\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配0次或多次前面出现字符或子模式。\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‘fo*’匹配”food”中”foo”\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e+\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配1次或多次前面出现子符或子模块，如([a-z]+.com)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‘zo+’ 能匹配 ‘zo’ 以及 ‘zoo’\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e-\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e用在[ ]之内用来表示范围。\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e[0-9]、[a-z]、[A-Z]\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e|\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配位于|之前或之后的字符。\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003ePython|Pearl或P(ython|erl)：匹配’Python’或’Pearl’\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e^\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配行首，匹配以^后面的字符开头的字符串。\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e^http：匹配http://www.sohu.com\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e$\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配行尾，匹配以$之前的字符结束的字符串。\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‘t$’并不会匹配  “eater”中的  ‘t’,但是会匹配  ‘eat’ 中的  ‘t’.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e?\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配位于“?”之前的0次或1次前面出现的正则表达式。\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‘do(es)?’ 可以匹配 ‘do’或 ‘does’ 中的’do’ 。\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\\\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e转义字符\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\\num\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003enum为正整数。\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‘(.)\\1’匹配两个连续的相同字符\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\\f\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配换页符\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\\n\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配换行符\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\\r\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配回车符\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e元字符\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e功\u003c/strong\u003e  \u003cstrong\u003e能\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\\b\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配单词头或单词尾\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‘er\\b’ 可以匹配’never’ 中的 ‘er’，但不能匹配 “verb”中的 ‘er’。\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\\B\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e与\\b含义相反，不匹配单词头或尾\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‘er\\B’ 能匹配 “verb” 中的 ‘er’，但不能匹配 “never” 中的 ‘er’。\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\\d\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配任何数字，相当于[0-9]\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‘\\d’能匹配“20大数据专业”中的’20’\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\\D\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e与\\d含义相反，相当于[^0-9]，即不包括0-9之间数字  ，^在中括号里与前面“^在字符串首”的含义不同\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‘\\D’能匹配“20大数据专业”中的“大数据专业”\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\\s\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配任何空白字符，包括空格、制表符、换页符，相当于[\\f\\n\\r\\t\\v]\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‘\\s’能匹配  “python word” 中的“word”\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\\S\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e与\\s含义相反，相当于[^\\f\\n\\r\\t\\v]，即不包括空格、制表符、换页符等\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‘\\S’能匹配  “python word”中“python”\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\\w\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配任何字母、数字以及下划线，相当于[a-zA-z0-9]\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‘\\w’能匹配  “python”中的’p’、’y’、’t’、’h’、’o’、’n’\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e\\W\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e与\\w含义相反，与[^a-zA-z0-9]等效，即除去a-zA-z0-9之外的字符\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e‘\\W’能匹配  “python#”中的’#’\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e( )\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e将位于括号内内容作为一个整体来对待\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e(.)\\1+：匹配二次或多次连续重复出现的任意字符\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e{\u003c/strong\u003e \u003cstrong\u003em,n\u003c/strong\u003e**}**\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e至少重复m次，最多重复n次{ }前面的字符（串）或子模式(….)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u0026ldquo;o{1,3}\u0026rdquo; 将匹配  \u0026ldquo;fooooood\u0026rdquo; 中的前三个 o\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e[ ]\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e匹配位于[ ]中的任意一个字符\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e[PIW]ython：匹配’Python’、’Iython’或’Wython’\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e[^xyz]\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e反向字符集，匹配除x,y,z之外的任意字符\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e[^abc]：匹配一个除’a’、’b’和’c’之外的任意字符\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e[a-z]\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e字符范围，匹配任意小写英文字符\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e[a-z]匹配“python3”中的’p’、’y’、’t’、’h’、’o’、’n’\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003e[^a-z]\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e反向范围字符，匹配除小写英文字母之外的任意字符\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e[^a-z]匹配“python3”中的‘3’\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e\u003cstrong\u003ere\u003c/strong\u003e \u003cstrong\u003e模块常用的方法\u003c/strong\u003e \n    \u003cdiv id=\"re-%E6%A8%A1%E5%9D%97%E5%B8%B8%E7%94%A8%E7%9A%84%E6%96%B9%E6%B3%95\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#re-%E6%A8%A1%E5%9D%97%E5%B8%B8%E7%94%A8%E7%9A%84%E6%96%B9%E6%B3%95\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e方\u003c/strong\u003e    \u003cstrong\u003e法\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e功\u003c/strong\u003e    \u003cstrong\u003e能\u003c/strong\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003ecompile(pattern[,flags])\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e创建模式对象\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003esearch(\u003c/strong\u003e \u003cstrong\u003epattern,string\u003c/strong\u003e \u003cstrong\u003e[,flags])\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e在整字符串中寻找模式，返回match对象或None\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003ematch(\u003c/strong\u003e \u003cstrong\u003epattern,string\u003c/strong\u003e \u003cstrong\u003e[,flags])\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e从字符串首端匹配模式，返回match对象或None\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003efindall\u003c/strong\u003e \u003cstrong\u003e(\u003c/strong\u003e \u003cstrong\u003epattern,string\u003c/strong\u003e \u003cstrong\u003e[,flags])\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e返回字符串中模式的所有匹配项的列表\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003efinditer\u003c/strong\u003e \u003cstrong\u003e(\u003c/strong\u003e \u003cstrong\u003epattern,string\u003c/strong\u003e \u003cstrong\u003e[,flags])\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e与findall()函数相同，但返回的不是一个列表，而是一个迭代器。对于每一次匹配，迭代器都返回一个匹配对象\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003esplit(\u003c/strong\u003e \u003cstrong\u003epattern,string\u003c/strong\u003e \u003cstrong\u003e[,\u003c/strong\u003e \u003cstrong\u003emaxsplit\u003c/strong\u003e \u003cstrong\u003e=0])\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e根据正则表达式的模式分隔符，split函数将字符串分割为列表，然后返回成功匹配的列表，分隔最多操作max次（默认分割所有匹配成功的位置）\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003esub(\u003c/strong\u003e \u003cstrong\u003epattern,repl,string\u003c/strong\u003e \u003cstrong\u003e[,count=0])\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e使用repl替换所有正则表达式的模式在字符串中出现的位置，除非定义了count，否则就将替换所有出现的位置\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003esubn\u003c/strong\u003e \u003cstrong\u003e(\u003c/strong\u003e \u003cstrong\u003epattern,repl,string\u003c/strong\u003e \u003cstrong\u003e)\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e使用repl替换所有正则表达式的模式在字符串中出现的次数\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003eescape(string)\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e将字符串中所有特殊正则表达式字符转义\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003epurge()\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e清除隐式编译的正则表达式模式\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003egroup(\u003c/strong\u003e \u003cstrong\u003enum\u003c/strong\u003e \u003cstrong\u003e=0)\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e返回整个匹配对象，或者编号为num的特定子组\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003egroups(default=None)\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e返回一个包含所有匹配子组的元组（如果没有成功匹配，则返回一个空元组）\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003egroupdict\u003c/strong\u003e \u003cstrong\u003e(default=None)\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e返回一个包含所有匹配的命名子组的字典，所有的子组名称作为字典的键（如果没有成功匹配，则返回一个空字典）\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e参数\u003c/strong\u003e \u003cstrong\u003eflags\u003c/strong\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e\u003cstrong\u003e功\u003c/strong\u003e  \u003cstrong\u003e能\u003c/strong\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003ere.I\u003c/strong\u003e \u003cstrong\u003e、\u003c/strong\u003e \u003cstrong\u003ere.IGNORECASE\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e忽略大小写的匹配\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003ere.L\u003c/strong\u003e \u003cstrong\u003e、\u003c/strong\u003e \u003cstrong\u003ere.LOCALE\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e根据所使用的本地语言环境通过\\w、\\W、\\b、\\B、\\s、\\S实现匹配\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003ere.\u003c/strong\u003e \u003cstrong\u003eU\u003c/strong\u003e \u003cstrong\u003e、\u003c/strong\u003e \u003cstrong\u003ere.UNICODE\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e根据全球统一的Unicode字符集解析字符影响\\w, \\W, \\b, \\B的含义\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003ere.\u003c/strong\u003e \u003cstrong\u003eS\u003c/strong\u003e \u003cstrong\u003e、\u003c/strong\u003e \u003cstrong\u003ere.DOTALL\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e使  . 匹配包括换行在内的所有字符，影响 ^ 和  $\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003ere.M\u003c/strong\u003e \u003cstrong\u003e、\u003c/strong\u003e \u003cstrong\u003ere.MULTILINE\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e多行匹配，影响  ^ 和  $\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cstrong\u003ere.X\u003c/strong\u003e \u003cstrong\u003e、\u003c/strong\u003e \u003cstrong\u003ere.VERBOSE\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e这个选项忽略规则表达式中的空白和注释，并允许使用 ’#’ 来引导一个注释。这样可以让你把规则写得更美观些。\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e文件 \n    \u003cdiv id=\"%E6%96%87%E4%BB%B6\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E6%96%87%E4%BB%B6\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003e操作\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003e功能\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e文件对象  = open(file, mode, encoding)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e打开文件获得文件对象\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e文件对象.read(num)\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e读取指定长度字节  不指定num读取文件全部\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e文件对象.readline()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e读取一行\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e文件对象.readlines()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e读取全部行，得到列表\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003efor 临时变量 in 文件对象\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003efor循环文件行，一次循环得到一行数据\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e文件对象.close()\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e关闭文件对象\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003ewith open() as f\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e通过with  open语法打开文件，可以自动关闭\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003emode\u003c/strong\u003e \u003cstrong\u003e常用的三种基础访问模式\u003c/strong\u003e\u003c/p\u003e","title":"Python复习粗略带过","type":"blogs"},{"content":"","date":"2024-00-00","externalUrl":null,"permalink":"/tags/%E5%AD%A6%E4%B9%A0/","section":"Tags","summary":"","title":"学习","type":"tags"},{"content":" 我们首先要准备好环境并且安装GPT-SoVITS # 安装Python Python官网 # 安装GPT-SoVITS与更新 # GPT-SoVITS下载（icloud） 其他下载链接 # 将文件解压至心仪的文件夹，如果想更新，可以从官方的文件更新，只需解压后拖入源文件夹覆盖文件即可。 # 安装依赖 # 在文件夹路径输入cmd以在该文件夹打开cmd,你也可以用其他方法打开。 # 输入指令自动安装补全依赖 # runtime\\python -m pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple --trusted-host pypi.tuna.tsinghua.edu.cn 启动 # 在你的文件夹中找到go-webui.bat双击启动 # [ ]\n直接使用 # [ ]\n找到 1-GPT-SoVITS-TTS,开启TTS推理WebUI，等待自动打开窗口。选择主参考音频只有一个，次要音频可以加多个，主音频可以写参考文本，不知道可以开不参考，选择参考音频语种，就可以生成了。填写生成文本与合成语种，即可生成。 # ","date":"2024-00-00","externalUrl":null,"permalink":"/blogs/2025/gpt-sovitswindows%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8/","section":"Blogs","summary":"\u003ch3 class=\"relative group\"\u003e我们首先要准备好环境并且安装GPT-SoVITS \n    \u003cdiv id=\"%E6%88%91%E4%BB%AC%E9%A6%96%E5%85%88%E8%A6%81%E5%87%86%E5%A4%87%E5%A5%BD%E7%8E%AF%E5%A2%83%E5%B9%B6%E4%B8%94%E5%AE%89%E8%A3%85gpt-sovits\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E6%88%91%E4%BB%AC%E9%A6%96%E5%85%88%E8%A6%81%E5%87%86%E5%A4%87%E5%A5%BD%E7%8E%AF%E5%A2%83%E5%B9%B6%E4%B8%94%E5%AE%89%E8%A3%85gpt-sovits\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\n\n\u003ch5 class=\"relative group\"\u003e安装Python   \u003ca href=\"https://www.python.org/\" target=\"_blank\"\u003ePython官网\u003c/a\u003e \n    \u003cdiv id=\"%E5%AE%89%E8%A3%85python---python%E5%AE%98%E7%BD%91httpswwwpythonorg\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%AE%89%E8%A3%85python---python%E5%AE%98%E7%BD%91httpswwwpythonorg\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h5\u003e\n\n\n\u003ch5 class=\"relative group\"\u003e安装GPT-SoVITS与更新 \n    \u003cdiv id=\"%E5%AE%89%E8%A3%85gpt-sovits%E4%B8%8E%E6%9B%B4%E6%96%B0\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%AE%89%E8%A3%85gpt-sovits%E4%B8%8E%E6%9B%B4%E6%96%B0\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h5\u003e\n\n\n\u003ch5 class=\"relative group\"\u003e\u003ca href=\"https://www.icloud.com/iclouddrive/0fejFggjP4AgBHXlxz2DLJ71w#GPT-SoVITS-v2-240821\" target=\"_blank\"\u003eGPT-SoVITS下载（icloud）\u003c/a\u003e  \u003ca href=\"https://www.yuque.com/baicaigongchang1145haoyuangong/ib3g1e/dkxgpiy9zb96hob4\" target=\"_blank\"\u003e其他下载链接\u003c/a\u003e \n    \u003cdiv id=\"gpt-sovits%E4%B8%8B%E8%BD%BDicloudhttpswwwicloudcomiclouddrive0fejfggjp4agbhxlxz2dlj71wgpt-sovits-v2-240821--%E5%85%B6%E4%BB%96%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5httpswwwyuquecombaicaigongchang1145haoyuangongib3g1edkxgpiy9zb96hob4\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#gpt-sovits%E4%B8%8B%E8%BD%BDicloudhttpswwwicloudcomiclouddrive0fejfggjp4agbhxlxz2dlj71wgpt-sovits-v2-240821--%E5%85%B6%E4%BB%96%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5httpswwwyuquecombaicaigongchang1145haoyuangongib3g1edkxgpiy9zb96hob4\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h5\u003e\n\n\n\u003ch5 class=\"relative group\"\u003e将文件解压至心仪的文件夹，如果想更新，可以从\u003ca href=\"https://github.com/RVC-Boss/GPT-SoVITS/releases\" target=\"_blank\"\u003e官方的文件\u003c/a\u003e更新，只需解压后拖入源文件夹覆盖文件即可。 \n    \u003cdiv id=\"%E5%B0%86%E6%96%87%E4%BB%B6%E8%A7%A3%E5%8E%8B%E8%87%B3%E5%BF%83%E4%BB%AA%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9%E5%A6%82%E6%9E%9C%E6%83%B3%E6%9B%B4%E6%96%B0%E5%8F%AF%E4%BB%A5%E4%BB%8E%E5%AE%98%E6%96%B9%E7%9A%84%E6%96%87%E4%BB%B6httpsgithubcomrvc-bossgpt-sovitsreleases%E6%9B%B4%E6%96%B0%E5%8F%AA%E9%9C%80%E8%A7%A3%E5%8E%8B%E5%90%8E%E6%8B%96%E5%85%A5%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9%E8%A6%86%E7%9B%96%E6%96%87%E4%BB%B6%E5%8D%B3%E5%8F%AF\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%B0%86%E6%96%87%E4%BB%B6%E8%A7%A3%E5%8E%8B%E8%87%B3%E5%BF%83%E4%BB%AA%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9%E5%A6%82%E6%9E%9C%E6%83%B3%E6%9B%B4%E6%96%B0%E5%8F%AF%E4%BB%A5%E4%BB%8E%E5%AE%98%E6%96%B9%E7%9A%84%E6%96%87%E4%BB%B6httpsgithubcomrvc-bossgpt-sovitsreleases%E6%9B%B4%E6%96%B0%E5%8F%AA%E9%9C%80%E8%A7%A3%E5%8E%8B%E5%90%8E%E6%8B%96%E5%85%A5%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9%E8%A6%86%E7%9B%96%E6%96%87%E4%BB%B6%E5%8D%B3%E5%8F%AF\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h5\u003e\n\n\n\u003ch3 class=\"relative group\"\u003e安装依赖 \n    \u003cdiv id=\"%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\n\n\u003ch5 class=\"relative group\"\u003e在文件夹路径输入cmd以在该文件夹打开cmd,你也可以用其他方法打开。 \n    \u003cdiv id=\"%E5%9C%A8%E6%96%87%E4%BB%B6%E5%A4%B9%E8%B7%AF%E5%BE%84%E8%BE%93%E5%85%A5cmd%E4%BB%A5%E5%9C%A8%E8%AF%A5%E6%96%87%E4%BB%B6%E5%A4%B9%E6%89%93%E5%BC%80cmd%E4%BD%A0%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%94%A8%E5%85%B6%E4%BB%96%E6%96%B9%E6%B3%95%E6%89%93%E5%BC%80\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%9C%A8%E6%96%87%E4%BB%B6%E5%A4%B9%E8%B7%AF%E5%BE%84%E8%BE%93%E5%85%A5cmd%E4%BB%A5%E5%9C%A8%E8%AF%A5%E6%96%87%E4%BB%B6%E5%A4%B9%E6%89%93%E5%BC%80cmd%E4%BD%A0%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%94%A8%E5%85%B6%E4%BB%96%E6%96%B9%E6%B3%95%E6%89%93%E5%BC%80\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h5\u003e\n\n\n\u003ch5 class=\"relative group\"\u003e输入指令自动安装补全依赖 \n    \u003cdiv id=\"%E8%BE%93%E5%85%A5%E6%8C%87%E4%BB%A4%E8%87%AA%E5%8A%A8%E5%AE%89%E8%A3%85%E8%A1%A5%E5%85%A8%E4%BE%9D%E8%B5%96\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E8%BE%93%E5%85%A5%E6%8C%87%E4%BB%A4%E8%87%AA%E5%8A%A8%E5%AE%89%E8%A3%85%E8%A1%A5%E5%85%A8%E4%BE%9D%E8%B5%96\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h5\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eruntime\\python -m pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple --trusted-host pypi.tuna.tsinghua.edu.cn\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch3 class=\"relative group\"\u003e启动 \n    \u003cdiv id=\"%E5%90%AF%E5%8A%A8\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%90%AF%E5%8A%A8\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\n\n\u003ch6 class=\"relative group\"\u003e在你的文件夹中找到\u003cstrong\u003ego-webui.bat\u003c/strong\u003e双击启动 \n    \u003cdiv id=\"%E5%9C%A8%E4%BD%A0%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD%E6%89%BE%E5%88%B0go-webuibat%E5%8F%8C%E5%87%BB%E5%90%AF%E5%8A%A8\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E5%9C%A8%E4%BD%A0%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD%E6%89%BE%E5%88%B0go-webuibat%E5%8F%8C%E5%87%BB%E5%90%AF%E5%8A%A8\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h6\u003e\n\u003cp\u003e[\n  \u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://s21.ax1x.com/2024/11/21/pAWfZE6.png\" alt=\"pAWfZE6.png\" /\u003e\n    \n  \u003c/figure\u003e\n]\u003c/p\u003e","title":"GPT-SoVITS（windows）初次使用","type":"blogs"},{"content":"","date":"2024-00-00","externalUrl":null,"permalink":"/tags/test/","section":"Tags","summary":"","title":"Test","type":"tags"},{"content":"","date":"2024-00-00","externalUrl":null,"permalink":"/tags/unity/","section":"Tags","summary":"","title":"Unity","type":"tags"},{"content":" Unity 下载中文模块 # 根据https://new-translate.unity3d.jp/v1/live/54/2019.4/zh-hans这个链接，我们将2019.4这个日期改为我们所需要的版本日期，例如2021.3，我们可以改为https://new-translate.unity3d.jp/v1/live/54/2021.3/zh-hans\n这样我们就可以下载模块文件，并更改我们的编辑器的语言了，下载的文件zh-hans.po 要放在Unity文件下的Editor/Data/Localization目录下，如果没有请创建。\n","date":"2024-00-00","externalUrl":null,"permalink":"/blogs/2025/unity-%E4%B8%8B%E8%BD%BD%E4%B8%AD%E6%96%87%E6%A8%A1%E5%9D%97/","section":"Blogs","summary":"\u003ch3 class=\"relative group\"\u003eUnity 下载中文模块 \n    \u003cdiv id=\"unity-%E4%B8%8B%E8%BD%BD%E4%B8%AD%E6%96%87%E6%A8%A1%E5%9D%97\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#unity-%E4%B8%8B%E8%BD%BD%E4%B8%AD%E6%96%87%E6%A8%A1%E5%9D%97\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h3\u003e\n\u003cp\u003e根据https://new-translate.unity3d.jp/v1/live/54/2019.4/zh-hans这个链接，我们将2019.4这个日期改为我们所需要的版本日期，例如2021.3，我们可以改为https://new-translate.unity3d.jp/v1/live/54/2021.3/zh-hans\u003c/p\u003e","title":"Unity 下载中文模块","type":"blogs"},{"content":" 例子 # ---\rtitle: \u0026#34;这是一个测试\u0026#34;\rdate: 2024-11-19\rdescription: \u0026#34;这是网站的一个测试例子\u0026#34;\rtags: [\u0026#34;test\u0026#34;]\r--- ","date":"2024-00-00","externalUrl":null,"permalink":"/blogs/2025/test/","section":"Blogs","summary":"\u003ch1 class=\"relative group\"\u003e例子 \n    \u003cdiv id=\"%E4%BE%8B%E5%AD%90\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#%E4%BE%8B%E5%AD%90\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h1\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e---\r\ntitle: \u0026#34;这是一个测试\u0026#34;\r\ndate: 2024-11-19\r\ndescription: \u0026#34;这是网站的一个测试例子\u0026#34;\r\ntags: [\u0026#34;test\u0026#34;]\r\n---\n\u003c/code\u003e\u003c/pre\u003e","title":"这是一个测试","type":"blogs"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]